name: Release

on:
  push:
    branches:
      - master
  schedule:
    # * is a special character in YAML, so you have to quote this string
    - cron: '0 3 * * 5,6'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo apt-get update
        sudo apt-get -qq remove --purge mysql* php* google* firefox ghc azure-cli dotnet* powershell ruby-full zulu* hhvm llvm*
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /var/lib/docker
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/hostedtoolcache/go /opt/hostedtoolcache/Ruby /opt/hostedtoolcache/node
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq clean
          
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '11s/#//' feeds.conf.default
        echo 'src-git helloworld https://github.com/fw876/helloworld' >>feeds.conf.default
        echo 'src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall.git;packages' >>feeds.conf.default
        echo 'src-git passwall_luci https://github.com/xiaorouji/openwrt-passwall.git;luci' >>feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/Lienol/openwrt-package package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization - Build_WRT7621
      env:
        CONFIG_FILE: 'wrt7621.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s


    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.FILE_DATE }}
        files: |
          openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin
          openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2.manifest
